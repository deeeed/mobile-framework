(self.webpackChunk_siteed_design_system=self.webpackChunk_siteed_design_system||[]).push([[2448],{"./src/components/result/result.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.Result=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_Image=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/Image/index.js")),_StyleSheet=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/StyleSheet/index.js")),_View=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/View/index.js")),_reactNativePaper=__webpack_require__("./node_modules/react-native-paper/lib/module/index.js"),_Button=__webpack_require__("./src/components/button/Button.tsx"),_themeProvider=__webpack_require__("./src/providers/theme-provider.tsx"),_vectorIcons=__webpack_require__("./node_modules/@expo/vector-icons/build/Icons.js"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}(exports.Result=function Result(_ref2){var _ref2$buttonText=_ref2.buttonText,buttonText=void 0===_ref2$buttonText?"ACTION":_ref2$buttonText,_ref2$buttonMode=_ref2.buttonMode,buttonMode=void 0===_ref2$buttonMode?"contained":_ref2$buttonMode,_ref2$secondaryButton=_ref2.secondaryButtonMode,secondaryButtonMode=void 0===_ref2$secondaryButton?"outlined":_ref2$secondaryButton,secondaryButtonText=_ref2.secondaryButtonText,_ref2$status=_ref2.status,status=void 0===_ref2$status?"info":_ref2$status,img=_ref2.img,imgUrl=_ref2.imgUrl,imgStyle=_ref2.imgStyle,message=_ref2.message,extra=_ref2.extra,onButtonPress=_ref2.onButtonPress,onSecondaryButtonPress=_ref2.onSecondaryButtonPress,style=_ref2.style,title=_ref2.title,theme=(0,_themeProvider.useTheme)(),styles=(0,_react.useMemo)((function(){return function getStyles(_ref){var theme=_ref.theme;return _StyleSheet.default.create({container:{alignItems:"center",paddingVertical:theme.padding.l,gap:10},imgWrap:{margin:0},img:{width:60,height:60},titleContainer:{},titleText:{},messageContainer:{},messageText:{},buttonWrap:{flexDirection:"row",gap:10},extraContainer:{},button:{flex:1}})}({theme})}),[theme]),imgContent=null;if(img)imgContent=(0,_jsxRuntime.jsx)(_View.default,{style:styles.imgWrap,children:img});else if(imgUrl)imgContent=(0,_jsxRuntime.jsx)(_View.default,{style:styles.imgWrap,children:(0,_jsxRuntime.jsx)(_Image.default,{source:imgUrl,style:[styles.img,imgStyle]})});else{var icon="information",iconColor={info:theme.colors.info,warning:theme.colors.warning,error:theme.colors.error,success:theme.colors.success}[status];switch(status){case"success":icon="check-circle";break;case"error":icon="close-circle";break;case"info":icon="information";break;case"warning":icon="alert"}imgContent=(0,_jsxRuntime.jsx)(_vectorIcons.MaterialCommunityIcons,{name:icon,size:60,color:iconColor})}return(0,_jsxRuntime.jsxs)(_View.default,{style:[styles.container,style],children:[imgContent,title?(0,_jsxRuntime.jsx)(_View.default,{style:styles.titleContainer,children:(0,_jsxRuntime.jsx)(_reactNativePaper.Text,{variant:"headlineMedium",style:styles.titleText,children:title})}):null,message?(0,_jsxRuntime.jsx)(_View.default,{style:styles.messageContainer,children:(0,_jsxRuntime.jsx)(_reactNativePaper.Text,{variant:"bodyMedium",style:styles.messageText,children:message})}):null,(0,_jsxRuntime.jsxs)(_View.default,{style:styles.buttonWrap,children:[onButtonPress?(0,_jsxRuntime.jsx)(_Button.Button,{style:styles.button,mode:buttonMode,onPress:onButtonPress,children:buttonText}):null,secondaryButtonText?(0,_jsxRuntime.jsx)(_Button.Button,{mode:secondaryButtonMode,onPress:onSecondaryButtonPress,children:secondaryButtonText}):null]}),extra&&(0,_jsxRuntime.jsx)(_View.default,{style:styles.extraContainer,children:extra})]})}).__docgenInfo={description:"",methods:[],displayName:"Result",props:{status:{required:!1,tsType:{name:"union",raw:"'success' | 'error' | 'info' | 'warning'",elements:[{name:"literal",value:"'success'"},{name:"literal",value:"'error'"},{name:"literal",value:"'info'"},{name:"literal",value:"'warning'"}]},description:"",defaultValue:{value:"'info'",computed:!1}},img:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},imgUrl:{required:!1,tsType:{name:"ImageSourcePropType"},description:""},imgStyle:{required:!1,tsType:{name:"StyleProp",elements:[{name:"ImageStyle"}],raw:"StyleProp<ImageStyle>"},description:""},title:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},message:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},buttonText:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'ACTION'",computed:!1}},buttonMode:{required:!1,tsType:{name:"ButtonProps['mode']",raw:"ButtonProps['mode']"},description:"",defaultValue:{value:"'contained'",computed:!1}},secondaryButtonText:{required:!1,tsType:{name:"string"},description:""},secondaryButtonMode:{required:!1,tsType:{name:"ButtonProps['mode']",raw:"ButtonProps['mode']"},description:"",defaultValue:{value:"'outlined'",computed:!1}},style:{required:!1,tsType:{name:"StyleProp",elements:[{name:"ViewStyle"}],raw:"StyleProp<ViewStyle>"},description:""},extra:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},onButtonPress:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: GestureResponderEvent) => void",signature:{arguments:[{type:{name:"GestureResponderEvent"},name:"e"}],return:{name:"void"}}},description:""},onSecondaryButtonPress:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: GestureResponderEvent) => void",signature:{arguments:[{type:{name:"GestureResponderEvent"},name:"e"}],return:{name:"void"}}},description:""}}}}}]);